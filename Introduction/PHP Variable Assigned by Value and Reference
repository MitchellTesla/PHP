By Value
By default, variables are always assigned by value.

When you assign an expression to a variable, the entire value of the original expression is copied into the destination variable.

After assigning one variable's value to another, changing one of those variables will have no effect on the other.

By Reference
PHP also offers another way to assign values to variables: assign by reference.

This means that the new variable simply references (in other words, "becomes an alias for" or "points to") the original variable.

Changes to the new variable affect the original, and vice versa.

To assign by reference, simply prepend an ampersand (&) to the beginning of the variable which is being assigned (the source variable).

For instance, the following code snippet outputs 'My name is PHP' twice:

Copy
<?php
$foo = 'PHP';              // Assign the value 'PHP' to $foo
$bar = &$foo;              // Reference $foo via $bar.
$bar = "My name is $bar";  // Alter $bar...
echo $bar;
echo $foo;                 // $foo is altered too.
?>
Result


Only named variables may be assigned by reference.

Copy
<?php
$foo = 25;
$bar = &$foo;     // This is a valid assignment.
$bar = &(2 * 7);  // Invalid; references an unnamed expression.

function test()
{
   return 25;
}

$bar = &test();    // Invalid.
?>
