Any scalar variable, array element or object property with a string representation can be included via this syntax.

Simply write the expression the same way as it would appear outside the string, and then wrap it in { and }.

Since { can not be escaped, this syntax will only be recognised when the $ immediately follows the {.

Use {\$ to get a literal {$.

Copy
<?php
// Show all errors
error_reporting(E_ALL);

$great = 'fantastic';

// Won't work, outputs: This is { fantastic}
echo "This is { $great}";

// Works, outputs: This is fantastic
echo "This is {$great}";
?>
Result


Reference object

Copy
echo "This square is {$square->width}00 centimeters broad.";
quoted keys only work using the curly brace syntax

Copy
echo "This works: {$arr['key']}";
Two dimensional array:

Copy
echo "This works: {$arr[4][3]}";
When using multi-dimensional arrays, always use braces around arrays when inside of strings

Copy
echo "This works: {$arr['foo'][3]}";
It is also possible to access class properties using variables within strings using this syntax.

Copy
<?php
class foo {
    var $bar = 'I am bar.';
}

$foo = new foo();
$bar = 'bar';
$baz = array('foo', 'bar', 'baz', 'quux');
echo "{$foo->$bar}\n";
echo "{$foo->{$baz[1]}}\n";
?>
