continue is used within looping structures to skip the rest of the current loop iteration.

It will continue execution at the condition evaluation and then the beginning of the next iteration.

In PHP the switch statement is considered a looping structure for the purposes of continue.

If a switch is inside a loop, continue 2 will continue with the next iteration of the outer loop.

continue accepts an optional numeric argument which tells it how many levels of enclosing loops it should skip to the end of.

The default value is 1, thus skipping to the end of the current loop.

Copy
<?php
foreach ($arr as $key => $value) {
    if (!($key % 2)) { // skip even members
        continue;
    }
    foo($value);
}

$i = 0;
while ($i++ < 5) {
    echo "Outer<br />\n";
    while (1) {
        echo "Middle<br />\n";
        while (1) {
            echo "Inner<br />\n";
            continue 3;
        }
        echo "This never gets output.<br />\n";
    }
    echo "Neither does this.<br />\n";
}
?>
Result


Omitting the semicolon after continue can lead to confusion
